name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  claude-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            **/*.ts
            **/*.js
            **/*.tsx
            **/*.jsx
            **/*.json

      - name: Claude Code Review
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: anthropics/claude-github-action@v1
        with:
          anthropic-api-key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: 'claude-3-5-sonnet-20241022'
          max-tokens: 4000
          system-prompt: |
            You are an expert NestJS code reviewer. Focus on:
            - NestJS best practices and architecture patterns
            - TypeScript usage and type safety
            - Security vulnerabilities
            - Performance implications
            - Code maintainability and readability
            - Proper error handling
            - Database query optimization
            - API design consistency
            
            Provide constructive feedback with specific suggestions for improvement.
          
          prompt: |
            Please review the following pull request changes for a NestJS restaurant management system.
            
            This is a learning project implementing NestJS best practices with:
            - Modular architecture (feature-based modules)
            - Global middleware (filters, interceptors, pipes)
            - Repository pattern for data access
            - TypeScript strict mode
            - PostgreSQL with Prisma ORM
            
            Changed files:
            ${{ steps.changed-files.outputs.all_changed_files }}
            
            Please provide:
            1. Overall assessment of the changes
            2. Specific issues or improvements for each file
            3. Suggestions for better NestJS patterns
            4. Security or performance concerns
            5. Code quality recommendations